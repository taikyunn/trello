version: 2.1
jobs:
  # test:
  build:
    machine:
      image: circleci/classic:edge
    working_directory: ~/repo
    # working_directory: ~/app
    steps:
      - checkout
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-Linux-x86_64 > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: docker-compose up --build -d
          command: docker-compose up --build -d
      - run: sleep 30
      - run:
          name: docker-compose exec app rubocop
          command: docker-compose exec app rubocop
      - run:
          name: docker-compose exec app rails db:create
          command: docker-compose exec app rails db:create
      - run:
          name: docker-compose exec app rails db:migrate
          command: docker-compose exec app rails db:migrate
      - run:
          name: docker-compose exec app bash -c "yes n | rails webpacker:install"
          command: docker-compose exec app bash -c "yes n | rails webpacker:install"
      - run:
          name: docker-compose exec app rails webpacker:compile RAILS_ENV=test
          command: docker-compose exec app rails webpacker:compile RAILS_ENV=test
      - run:
          name: docker-compose exec app rspec
          command: docker-compose exec app rspec
      - run:
          name: docker-compose down
          command: docker-compose down
  deploy:
    machine:
      image: circleci/classic:edge
    steps:
      - checkout
      - run:
          name: "build docker image"
          command: docker build --rm=false -t registry.heroku.com/${HEROKU_APP_NAME}/web .
      - run:
          name: setup heroku command
          command: bash .circleci/setup_heroku.sh
      - run:
          name: heroku maintenance on
          command: heroku maintenance:on --app ${HEROKU_APP_NAME}
      - run:
          name: "push container to registry.heroku.com"
          command: |
            docker login --username=_ --password=$HEROKU_AUTH_TOKEN registry.heroku.com
            docker push registry.heroku.com/${HEROKU_APP_NAME}/web
      - run:
          name: heroku db migrate
          command: heroku run rails db:migrate --app ${HEROKU_APP_NAME}
      - run:
          name: heroku maintenance off
          command: heroku maintenance:off --app ${HEROKU_APP_NAME}

orbs:
  aws-ecr: circleci/aws-ecr@6.1.0
  aws-ecs: circleci/aws-ecs@0.0.8

workflows:
  build_and_push_image:
  jobs:
  - test
  - aws-ecr/build_and_push_image:
  name: web-build
  filters:
    branches:
        only: master
    requires:
      - test
    account-url: AWS_ECR_ACCOUNT_URL
    create-repo: true
    dockerfile: containers/nginx/Dockerfile
    repo: 'trello-nginx'
    region: AWS_REGION
    tag: "${CIRCLE_SHA1}"

  - aws-ecs/deploy-service-update:
    name: web-deploy
    requires:
      - web-build
    family: 'trello-task'
    cluster-name: 'trello-cs-3'
    service-name: '80'
    container-image-name-updates: 'container=web,tag=${CIRCLE_SHA1}'

    - aws-ecr/build-and-push-image:
    name: app-build
    filters:
      branches:
          only: master
    requires:
      - test
    account-url: AWS_ECR_ACCOUNT_URL
    create-repo: true
    dockerfile: .
    repo: 'trello-rails-new'
    region: AWS_REGION
    tag: "${CIRCLE_SHA1}"

    - aws-ecs/deploy-service-update:
    name: app-deploy
    requires:
      - app-build
    family: 'trello-task'
    cluster-name: 'trello-cs-3'
    service-name: '80'
    container-image-name-updates: 'container=app,tag=${CIRCLE_SHA1}'